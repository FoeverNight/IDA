;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2014 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3057-7374-2C			    |
; |	Zhou Tao, Jiangsu Australia Sinuo Network Technology Co., Ltd.	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	5CBBC4D75196023A92A41741D4F6C8C1
; Input	CRC32 :	52704021

; File Name   :	C:\Users\Night\Documents\Code\new\test.exe
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00000904 (   2308.)
; Section size in file		: 00000A00 (   2560.)
; Offset to raw	data for section: 00000400
; Flags	60000060: Text Data Executable Readable
; Alignment	: default
; OS type	  :  MS	Windows
; Application type:  Executable	32bit

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 401000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
; [000000F1 BYTES: COLLAPSED FUNCTION ___crt_xt_end__. PRESS KEYPAD CTRL-"+" TO	EXPAND]
; ---------------------------------------------------------------------------
		jmp	short ___mingw_CRTStartup
; ---------------------------------------------------------------------------
		align 10h
; [00000116 BYTES: COLLAPSED FUNCTION ___mingw_CRTStartup. PRESS KEYPAD	CTRL-"+" TO EXPAND]
		align 10h
; [00000018 BYTES: COLLAPSED FUNCTION _mainCRTStartup. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [00000018 BYTES: COLLAPSED FUNCTION _WinMainCRTStartup. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
		align 10h
; [0000000C BYTES: COLLAPSED FUNCTION _atexit. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [0000000C BYTES: COLLAPSED FUNCTION __onexit.	PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000009 BYTES: COLLAPSED FUNCTION ___do_sjlj_init. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public _main
_main		proc near		; CODE XREF: ___mingw_CRTStartup+E2p

Format		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
argc		= dword	ptr  8
argv		= dword	ptr  0Ch
envp		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		and	esp, 0FFFFFFF0h
		mov	eax, 0
		add	eax, 0Fh
		add	eax, 0Fh
		shr	eax, 4
		shl	eax, 4
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		call	__alloca
		call	___main
		lea	eax, [ebp+var_4]
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+Format], offset Format	; "%d"
		call	_scanf
		cmp	[ebp+var_4], 0
		jle	short loc_4012E1
		mov	[esp+18h+Format], offset aA0 ; "a > 0"
		call	_printf
		jmp	short locret_4012ED
; ---------------------------------------------------------------------------

loc_4012E1:				; CODE XREF: _main+41j
		mov	[esp+18h+Format], offset aN0 ; "n < 0"
		call	_printf

locret_4012ED:				; CODE XREF: _main+4Fj
		leave
		retn
_main		endp

; ---------------------------------------------------------------------------
		align 10h
; [00000028 BYTES: COLLAPSED FUNCTION __pei386_runtime_relocator. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; void __cdecl _fpreset()
		public __fpreset
__fpreset	proc near		; CODE XREF: ___crt_xt_end__+C6p
					; ___mingw_CRTStartup+19p
		push	ebp
		mov	ebp, esp
		fninit
		pop	ebp
		retn
__fpreset	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000039 BYTES: COLLAPSED FUNCTION ___do_global_dtors. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
		align 10h
; [00000054 BYTES: COLLAPSED FUNCTION ___do_global_ctors. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
		align 10h
; [00000064 BYTES: COLLAPSED FUNCTION ___main. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [0000000E BYTES: COLLAPSED FUNCTION ___w32_sharedptr_default_unexpected. PRESS KEYPAD	CTRL-"+" TO EXPAND]
		align 10h
; [00000092 BYTES: COLLAPSED FUNCTION ___w32_sharedptr_get. PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000235 BYTES: COLLAPSED FUNCTION ___w32_sharedptr_initialize. PRESS KEYPAD	CTRL-"+" TO EXPAND]
		align 10h
; [0000002D BYTES: COLLAPSED FUNCTION __alloca.	PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000047 BYTES: COLLAPSED FUNCTION ___eprintf. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ___set_app_type. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __cexit. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ___p__environ. PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _signal. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ___p__fmode. PRESS KEYPAD	CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __setmode. PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ___getmainargs. PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _printf. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _scanf. PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _free. PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _malloc. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _abort. PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _fflush. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _fprintf.	PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION SetUnhandledExceptionFilter(x). PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ExitProcess(x). PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetAtomNameA(x,x,x). PRESS KEYPAD	CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FindAtomA(x). PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION AddAtomA(x). PRESS KEYPAD	CTRL-"+" TO EXPAND]
		align 10h
; [00000009 BYTES: COLLAPSED FUNCTION ___sjlj_init_ctor. PRESS KEYPAD CTRL-"+" TO EXPAND]
		align 10h
		public ___CTOR_LIST__
___CTOR_LIST__	dd 0FFFFFFFFh		; DATA XREF: ___do_global_ctors+7r
					; ___do_global_ctors:loc_401390r ...
off_4018F4	dd offset ___sjlj_init_ctor ; DATA XREF: ___do_global_ctors:loc_4013AAr
					; ___do_global_ctors+47r ...
		dd 0
		public __DTOR_LIST__
__DTOR_LIST__	dd 0FFFFFFFFh
dword_401900	dd 40h dup(0)		; DATA XREF: .data:p_0o
		dd 180h	dup(?)
_text		ends

; Section 2. (virtual address 00002000)
; Virtual size			: 00000040 (	 64.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00000E00
; Flags	C0000040: Data Readable	Writable
; Alignment	: default
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 402000h
		public __CRT_glob
__CRT_glob	dd 0FFFFFFFFh		; DATA XREF: ___mingw_CRTStartup+31r
		align 10h
		public __fmode
; int _fmode
__fmode		dd 4000h		; DATA XREF: ___mingw_CRTStartup+58w
					; ___mingw_CRTStartup+B5r
		align 10h
p_0		dd offset dword_401900	; DATA XREF: ___do_global_dtors+6r
					; ___do_global_dtors+22r ...
		align 10h
dw2_once_1	dd 0			; DATA XREF: ___w32_sharedptr_initialize+115r
dword_402034	dd 0FFFFFFFFh		; DATA XREF: ___w32_sharedptr_initialize+11Dr
sjl_once_3	dd 0			; DATA XREF: ___w32_sharedptr_initialize+13Er
dword_40203C	dd 0FFFFFFFFh		; DATA XREF: ___w32_sharedptr_initialize+138r
		public __data_end__
__data_end__	dd 70h dup(0)
		align 1000h
_data		ends

; Section 3. (virtual address 00003000)
; Virtual size			: 000000F0 (	240.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00001000
; Flags	40000040: Data Readable
; Alignment	: default
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 403000h
; char Format[3]
Format		db '%d',0               ; DATA XREF: _main+31o
; char aA0[]
aA0		db 'a > 0',0            ; DATA XREF: _main+43o
; char aN0[]
aN0		db 'n < 0',0            ; DATA XREF: _main:loc_4012E1o
		align 10h
_w32_atom_suffix dd 42494C2Dh		; DATA XREF: ___w32_sharedptr_initialize+25r
					; ___w32_sharedptr_initialize+169r
dword_403014	dd 57434347h		; DATA XREF: ___w32_sharedptr_initialize+3Er
					; ___w32_sharedptr_initialize+174r
dword_403018	dd 452D3233h		; DATA XREF: ___w32_sharedptr_initialize+54r
					; ___w32_sharedptr_initialize+17Fr
dword_40301C	dd 2D322D48h		; DATA XREF: ___w32_sharedptr_initialize+6Ar
					; ___w32_sharedptr_initialize+18Ar
dword_403020	dd 4A4C4A53h		; DATA XREF: ___w32_sharedptr_initialize+79r
					; ___w32_sharedptr_initialize+195r
dword_403024	dd 4854472Dh		; DATA XREF: ___w32_sharedptr_initialize+81r
					; ___w32_sharedptr_initialize+1A0r
dword_403028	dd 494D2D52h		; DATA XREF: ___w32_sharedptr_initialize+89r
					; ___w32_sharedptr_initialize+1ABr
dword_40302C	dd 3357474Eh		; DATA XREF: ___w32_sharedptr_initialize+91r
					; ___w32_sharedptr_initialize+1B3r
word_403030	dw 32h			; DATA XREF: ___w32_sharedptr_initialize+99r
					; ___w32_sharedptr_initialize+1BBr
		align 4
aW32_sharedptrS	db 'w32_sharedptr->size == sizeof(W32_EH_SHARED)',0
					; DATA XREF: ___w32_sharedptr_get:loc_4014A7o
; char aSUFailedAssert[]
aSUFailedAssert	db '%s:%u: failed assertion `%s',27h,0Ah,0
					; DATA XREF: ___w32_sharedptr_get:loc_4014B9o
		align 10h
a____GccGccConf	db '../../gcc/gcc/config/i386/w32-shared-ptr.c',0
					; DATA XREF: ___w32_sharedptr_get+70o
		align 4
aGetatomnameaAt	db 'GetAtomNameA (atom, s, sizeof(s)) != 0',0
					; DATA XREF: ___w32_sharedptr_get:loc_4014CEo
		align 4
		dd 7 dup(0)
		public __RUNTIME_PSEUDO_RELOC_LIST_END__
__RUNTIME_PSEUDO_RELOC_LIST_END__ dd 44h dup(0)	; DATA XREF: __pei386_runtime_relocator+1o
					; __pei386_runtime_relocator:loc_40130Eo
		align 1000h
_rdata		ends

; Section 4. (virtual address 00004000)
; Virtual size			: 000000B0 (	176.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0000080: Bss Readable Writable
; Alignment	: default
; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 404000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		public __argv
; char **_argv
__argv		dd ?			; DATA XREF: ___mingw_CRTStartup+25o
					; ___mingw_CRTStartup+D0r
		public __argc
; int _argc
__argc		dd ?			; DATA XREF: ___mingw_CRTStartup+43o
					; ___mingw_CRTStartup+DAr
		align 10h
		public __CRT_fmode
__CRT_fmode	dd ?			; DATA XREF: ___mingw_CRTStartup+4Fr
					; ___mingw_CRTStartup+70r ...
		align 10h
_initialized	dd ?			; DATA XREF: ___main+7r ___main+1Aw
		align 20h
dw2_object_mutex_0 dd ?			; DATA XREF: ___w32_sharedptr_initialize+FAr
dword_404044	dd ?			; DATA XREF: ___w32_sharedptr_initialize+105r
		align 10h
sjl_fc_key_2	dd ?			; DATA XREF: ___w32_sharedptr_initialize+126r
		align 10h
		public ___w32_sharedptr_terminate
___w32_sharedptr_terminate dd ?		; DATA XREF: ___w32_sharedptr_initialize+20Cw
		align 10h
		public ___w32_sharedptr
___w32_sharedptr dd ?			; DATA XREF: ___w32_sharedptr_default_unexpected+1r
					; ___w32_sharedptr_initialize+Cr ...
		align 10h
		public ___w32_sharedptr_unexpected
___w32_sharedptr_unexpected dd ?	; DATA XREF: ___w32_sharedptr_initialize+214w
		dd 0Bh dup(?)
		public __bss_end__
__bss_end__	dd 3D4h	dup(?)
_bss		ends

; Section 5. (virtual address 00005000)
; Virtual size			: 000002A8 (	680.)
; Section size in file		: 00000400 (   1024.)
; Offset to raw	data for section: 00001200
; Flags	C0000040: Data Readable	Writable
; Alignment	: default
; ===========================================================================

; Segment type:	Externs
; _idata
		extrn __head_libkernel32_a

;
; Imports from KERNEL32.dll
;
; ATOM __stdcall AddAtomA(LPCSTR lpString)
		extrn __imp__AddAtomA@4:dword ;	CODE XREF: ___w32_sharedptr_initialize+1CFp
					; DATA XREF: ___w32_sharedptr_initialize+1CFr ...
; void __stdcall ExitProcess(UINT uExitCode)
		extrn __imp__ExitProcess@4:dword ; DATA	XREF: ExitProcess(x)r
; ATOM __stdcall FindAtomA(LPCSTR lpString)
		extrn __imp__FindAtomA@4:dword ; CODE XREF: ___w32_sharedptr_initialize+A7p
					; ___w32_sharedptr_initialize+1F0p
					; DATA XREF: ...
; UINT __stdcall GetAtomNameA(ATOM nAtom, LPSTR	lpBuffer, int nSize)
		extrn __imp__GetAtomNameA@12:dword ; CODE XREF:	___w32_sharedptr_get+1Fp
					; DATA XREF: ___w32_sharedptr_get+1Fr ...
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
		extrn __imp__SetUnhandledExceptionFilter@4:dword
					; DATA XREF: SetUnhandledExceptionFilter(x)r

;
; Imports from msvcrt.dll
;
		extrn __imp____getmainargs:dword ; DATA	XREF: ___getmainargsr
		extrn __imp____p__environ:dword	; DATA XREF: ___p__environr
		extrn __imp____p__fmode:dword ;	DATA XREF: ___p__fmoder
		extrn __imp____set_app_type:dword ; CODE XREF: _mainCRTStartup+Dp
					; _WinMainCRTStartup+Dp
					; DATA XREF: ...
		extrn __imp___cexit:dword ; DATA XREF: __cexitr
		extrn __imp___iob:dword	; DATA XREF: ___mingw_CRTStartup+5Dr
					; ___mingw_CRTStartup+79r ...
; _onexit_t __cdecl __onexit(_onexit_t Func)
		extrn __imp___onexit:dword ; DATA XREF:	__onexit+1r
		extrn __imp___setmode:dword ; DATA XREF: __setmoder
; void __cdecl _abort()
		extrn __imp__abort:dword ; DATA	XREF: _abortr
; int __cdecl _atexit(void (__cdecl *)())
		extrn __imp__atexit:dword ; DATA XREF: _atexit+1r
; int __cdecl _fflush(FILE *File)
		extrn __imp__fflush:dword ; DATA XREF: _fflushr
; int _fprintf(FILE *File, const char *Format, ...)
		extrn __imp__fprintf:dword ; DATA XREF:	_fprintfr
; void __cdecl _free(void *Memory)
		extrn __imp__free:dword	; DATA XREF: _freer
; void *__cdecl	_malloc(size_t Size)
		extrn __imp__malloc:dword ; DATA XREF: _mallocr
; int _printf(const char *Format, ...)
		extrn __imp__printf:dword ; DATA XREF: _printfr
; int _scanf(const char	*Format, ...)
		extrn __imp__scanf:dword ; DATA	XREF: _scanfr
		extrn __imp__signal:dword ; DATA XREF: _signalr



		end _mainCRTStartup
